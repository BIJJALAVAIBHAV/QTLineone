# Generated by Django 4.1 on 2024-04-25 04:42

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Batchtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batchtype_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BatchType_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batchtype_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Branchimportmodel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name_import', models.CharField(max_length=100)),
                ('branch_qr_import', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='BranchModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch_name', models.CharField(max_length=100)),
                ('branch_qr', models.ImageField(blank=True, upload_to='qrcode')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Calender_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField()),
                ('category', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='complaint_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_import', models.CharField(max_length=100)),
                ('complaint_subject', models.CharField(max_length=100)),
                ('complaint_discription', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Course_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CourseManage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_title', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=50)),
                ('course_fee', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=0, max_digits=6)),
                ('final_price', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('curriculum', models.FileField(blank=True, null=True, upload_to='Curriculum')),
                ('course_image', models.ImageField(blank=True, null=True, upload_to='course_image')),
                ('course_banner', models.ImageField(blank=True, null=True, upload_to='course_banner')),
                ('hardware', models.CharField(max_length=100)),
                ('software', models.CharField(max_length=100)),
                ('short_description', models.TextField()),
                ('long_description', models.TextField()),
                ('batch_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.batchtype')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.course')),
            ],
        ),
        migrations.CreateModel(
            name='CourseManage_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_title', models.CharField(max_length=100)),
                ('course_plan', models.CharField(max_length=100)),
                ('course_name', models.CharField(max_length=100)),
                ('specialization', models.CharField(max_length=100)),
                ('teaching_faculty', models.CharField(max_length=100)),
                ('batch_type', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=100)),
                ('course_fee', models.DecimalField(decimal_places=0, max_digits=6)),
                ('discount', models.DecimalField(decimal_places=0, max_digits=6)),
                ('final_price', models.DecimalField(decimal_places=0, default=0, max_digits=6)),
                ('branch', models.CharField(max_length=100)),
                ('curriculum', models.FileField(default='null.pdf', upload_to='')),
                ('course_image', models.ImageField(default='null.png', upload_to='')),
                ('course_banner', models.ImageField(default='null.png', upload_to='')),
                ('hardware', models.CharField(max_length=100)),
                ('software', models.CharField(max_length=100)),
                ('short_description', models.TextField()),
                ('long_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Create_Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_title', models.CharField(max_length=80)),
                ('chapter_image', models.ImageField(upload_to='chapter_image')),
                ('chapter_logo', models.ImageField(upload_to='chapter_logo')),
                ('chapter_banner', models.ImageField(upload_to='')),
                ('chapter_description', models.TextField()),
                ('chapter_status', models.BooleanField(default=True)),
                ('chapter_date', models.DateTimeField(default=datetime.datetime.now)),
                ('course_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.course')),
            ],
        ),
        migrations.CreateModel(
            name='Create_Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_title', models.CharField(max_length=80)),
                ('lesson_image', models.ImageField(null=True, upload_to='lesson_image')),
                ('lesson_logo', models.ImageField(null=True, upload_to='lesson_logo')),
                ('lesson_description', models.TextField()),
                ('lesson_status', models.BooleanField(default=True)),
                ('lesson_date', models.DateTimeField(default=datetime.datetime.now)),
                ('chapter_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.create_chapter')),
                ('course_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.course')),
            ],
        ),
        migrations.CreateModel(
            name='Demo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('demotitle', models.CharField(max_length=100)),
                ('faculty', models.CharField(default='null', max_length=100)),
                ('meetinglink', models.CharField(max_length=100)),
                ('meetingid', models.CharField(max_length=100)),
                ('passcode', models.CharField(max_length=100)),
                ('datestartat', models.DateTimeField()),
                ('dateendat', models.DateTimeField()),
                ('demoimage', models.ImageField(default=True, null=True, upload_to='demo_image')),
                ('demobannerimage', models.ImageField(default=True, null=True, upload_to='demo_banner')),
                ('demodescription', models.TextField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Department_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Employee_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('personal_number', models.CharField(max_length=100)),
                ('alternative_number', models.CharField(blank=True, max_length=100, null=True)),
                ('personal_email', models.EmailField(max_length=254)),
                ('professional_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(max_length=100)),
                ('date_of_birth', models.CharField(max_length=100)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('religion', models.CharField(blank=True, max_length=100, null=True)),
                ('caste', models.CharField(blank=True, max_length=100, null=True)),
                ('Employee_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_image')),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('pincode', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('aadhar_card', models.CharField(blank=True, max_length=100, null=True)),
                ('pan_card', models.CharField(blank=True, max_length=100, null=True)),
                ('aadhar_card_pdf', models.FileField(blank=True, null=True, upload_to='aadhar_card_pdf')),
                ('pan_card_pdf', models.FileField(blank=True, default=None, upload_to='pan_card_pdf')),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=20)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
            ],
        ),
        migrations.CreateModel(
            name='employee_type_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_type_import', models.CharField(max_length=100)),
                ('date_update', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forumcategories_model_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_category_import', models.CharField(max_length=100)),
                ('date_update', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job_Category_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Category_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Jobtype_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JobType_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Leadstage_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Leadstage_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NETBanking_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('netbanking_name', models.CharField(max_length=100)),
                ('accountnumber', models.CharField(max_length=100)),
                ('ifscode', models.CharField(max_length=100)),
                ('accounttype', models.CharField(default='null', max_length=100)),
                ('bankname', models.CharField(max_length=100)),
                ('branchname', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='prospect_type_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prospect_type_import', models.CharField(max_length=100)),
                ('date_update', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='purpose_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose_type_import', models.CharField(max_length=100)),
                ('date_update', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Register_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crn', models.CharField(editable=False, max_length=100, null=True, unique=True)),
                ('company_name', models.CharField(max_length=100)),
                ('company_short_name', models.CharField(max_length=10)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('email_id', models.EmailField(max_length=254, null=True)),
                ('phone_number', models.CharField(max_length=10, null=True)),
                ('pin', models.IntegerField(null=True)),
                ('password', models.CharField(max_length=255, null=True)),
                ('otp', models.CharField(max_length=6, null=True)),
                ('terms_and_conditions', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization_name', models.CharField(max_length=100)),
                ('course_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Traning_type_import_form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_type_import', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='UPIPayments_import',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upipayments_name', models.CharField(max_length=100)),
                ('mobilenumber', models.CharField(max_length=100)),
                ('upiid', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='vendor_import_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_import', models.CharField(max_length=100)),
                ('date_update', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='vendorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor_name', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(null=True)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vendors', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='upipayments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upipayments_name', models.CharField(max_length=100)),
                ('mobilenumber', models.CharField(max_length=100)),
                ('upiid', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('upi_qr_code', models.ImageField(blank=True, upload_to='upi_qr_code')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='upi', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TrainingTypeName', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_types', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Sub_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_cat_title', models.CharField(max_length=80, unique=True)),
                ('sub_cat_status', models.BooleanField(default=False)),
                ('sub_cat_date', models.DateTimeField(default=datetime.datetime.now)),
                ('crn_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_category', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specilalization_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.course')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='specializations', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Regulations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.course')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regulations', to='console.register_model')),
                ('spec_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification_name', models.CharField(max_length=100, null=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=20)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualifications', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Purpose_of_visit_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=10)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(null=True)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purpose', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='ProspectType_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prospect_type', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=10)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(null=True)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prospect_types', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='netbanking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('netbanking_name', models.CharField(max_length=100)),
                ('accountnumber', models.CharField(max_length=100)),
                ('ifscode', models.CharField(max_length=100)),
                ('accounttype', models.CharField(default='null', max_length=100)),
                ('bankname', models.CharField(max_length=100)),
                ('branchname', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='net_banking', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Leadstage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Leadstage_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leadstages', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='LeadModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=11)),
                ('email', models.EmailField(max_length=254)),
                ('lead_position', models.CharField(choices=[('PROSPECT', 'PROSPECT'), ('LEAD', 'LEAD'), ('MQL', 'MQL'), ('SQL', 'SQL'), ('ASSIGNED_DEMO', 'ASSIGNED_DEMO'), ('ATTENDED_DEMO', 'ATTENDED_DEMO'), ('REQUEST_DISCOUNT', 'REQUEST_DISCOUNT'), ('OPPORTUNITY', 'OPPORTUNITY'), ('ADMITTED', 'ADMITTED'), ('SPAM', 'SPAM')], default='PROSPECT', max_length=100)),
                ('lead_type', models.CharField(choices=[('WARM', 'WARM'), ('COLD', 'COLD')], max_length=100, null=True)),
                ('token_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('token_generated_date', models.DateTimeField(blank=True, null=True)),
                ('prospect_taken', models.BooleanField(default=False)),
                ('lead_description', models.TextField(null=True)),
                ('mql_description', models.TextField(null=True)),
                ('sql_description', models.TextField(null=True)),
                ('token_generated_at', models.DateTimeField(default=datetime.datetime(2024, 4, 25, 10, 12, 2, 186073))),
                ('batch_number', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.regulations')),
                ('branch_name', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.coursemanage')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leads', to='console.register_model')),
                ('demo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.demo')),
                ('faculty', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.employee_model')),
                ('lead_sourse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.prospecttype_model')),
                ('lead_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.leadstage')),
                ('plan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.plan')),
                ('training_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.trainingtype')),
            ],
        ),
        migrations.CreateModel(
            name='Lead_generation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token_id', models.CharField(max_length=255)),
                ('token_generated_date', models.DateField(default=django.utils.timezone.now)),
                ('firstname', models.CharField(max_length=255)),
                ('lastname', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('lead_source', models.CharField(blank=True, max_length=255, null=True)),
                ('lead_stage', models.CharField(blank=True, max_length=255, null=True)),
                ('lead_position', models.CharField(choices=[('LEAD', 'LEAD'), ('ASSIGNED_DEMO', 'ASSIGNED_DEMO'), ('ATTENDED_DEMO', 'ATTENDED_DEMO'), ('REQUEST_DISCOUNT', 'REQUEST_DISCOUNT'), ('OPPORTUNITY', 'OPPORTUNITY'), ('ADMITTED', 'ADMITTED'), ('SPAM', 'SPAM')], max_length=100)),
                ('lead_type', models.CharField(blank=True, max_length=255, null=True)),
                ('has_attended_demo', models.BooleanField(default=False)),
                ('request_acceptance', models.BooleanField(default=False)),
                ('plan', models.CharField(blank=True, max_length=255, null=True)),
                ('course_faculty', models.CharField(blank=True, max_length=255, null=True)),
                ('course_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_fee', models.IntegerField(blank=True, null=True)),
                ('Final_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('admission_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remaining_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('demo_date', models.DateField(blank=True, null=True)),
                ('batch_no', models.CharField(blank=True, max_length=255, null=True)),
                ('paymentMode', models.CharField(blank=True, max_length=255, null=True)),
                ('paymentid', models.CharField(blank=True, max_length=255, null=True)),
                ('transactionid', models.CharField(blank=True, max_length=255, null=True)),
                ('joining_date', models.DateField(blank=True, null=True)),
                ('lead_description', models.TextField(blank=True, null=True)),
                ('mql_description', models.TextField(blank=True, null=True)),
                ('sql_description', models.TextField(blank=True, null=True)),
                ('Training_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.trainingtype')),
                ('branch_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
                ('course_interested_in', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.course')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Register_model', to='console.register_model')),
                ('enquiry_taken_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='languages', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Jobtype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('JobType_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=20)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_types', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Jobrole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobrole_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=20)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobrole', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Jobcategory_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=20)),
                ('crn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_category', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Forumcategories_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forum_category', models.CharField(max_length=40, unique=True)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(null=True)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forumcategories', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='Finance_and_Accounts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_status', models.CharField(blank=True, choices=[('Received', 'Received'), ('Not Received', 'Not Received'), ('Mis Matched', 'Mis Matched'), ('Suspicious', 'Suspicious')], max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('fince_password', models.CharField(blank=True, max_length=225, null=True)),
                ('crn', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finance_and_accounts', to='console.register_model')),
                ('leadstage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='console.leadmodel')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType_model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_type', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=10)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now)),
                ('updated_at', models.DateTimeField(null=True)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee_types', to='console.register_model')),
            ],
        ),
        migrations.AddField(
            model_name='employee_model',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='employee_model',
            name='department_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='console.department'),
        ),
        migrations.AddField(
            model_name='employee_model',
            name='designation_name',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='console.designation'),
        ),
        migrations.AddField(
            model_name='employee_model',
            name='employee_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='console.employeetype_model'),
        ),
        migrations.AddField(
            model_name='designation',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='designations', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='designation',
            name='department_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.department'),
        ),
        migrations.AddField(
            model_name='department',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='demo',
            name='batchno',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.regulations'),
        ),
        migrations.AddField(
            model_name='demo',
            name='branchlocation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel'),
        ),
        migrations.AddField(
            model_name='demo',
            name='course',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.course'),
        ),
        migrations.AddField(
            model_name='demo',
            name='courseplan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.plan'),
        ),
        migrations.AddField(
            model_name='demo',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demo', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='demo',
            name='demosessiontype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.trainingtype'),
        ),
        migrations.AddField(
            model_name='demo',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.specialization'),
        ),
        migrations.CreateModel(
            name='Create_Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_title', models.CharField(max_length=80)),
                ('topic_duration', models.CharField(max_length=30)),
                ('topic_vedio_url', models.CharField(max_length=50)),
                ('topic_description', models.TextField()),
                ('topic_status', models.BooleanField(default=True)),
                ('topic_date', models.DateTimeField(default=datetime.datetime.now)),
                ('chapter_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.create_chapter')),
                ('course_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.course')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='console.register_model')),
                ('language_name', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.language')),
                ('lesson_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.create_lesson')),
                ('spec_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.specialization')),
                ('sub_cat_title', models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.sub_category')),
            ],
        ),
        migrations.AddField(
            model_name='create_lesson',
            name='crn_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='create_lesson',
            name='spec_title',
            field=models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.specialization'),
        ),
        migrations.AddField(
            model_name='create_lesson',
            name='sub_cat_title',
            field=models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.sub_category'),
        ),
        migrations.AddField(
            model_name='create_chapter',
            name='crn_number',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='create_chapter',
            name='spec_title',
            field=models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.specialization'),
        ),
        migrations.AddField(
            model_name='create_chapter',
            name='sub_cat_title',
            field=models.ForeignKey(default=True, on_delete=django.db.models.deletion.CASCADE, to='console.sub_category'),
        ),
        migrations.AddField(
            model_name='coursemanage',
            name='course_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.plan'),
        ),
        migrations.AddField(
            model_name='coursemanage',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_manage', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='coursemanage',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.specialization'),
        ),
        migrations.AddField(
            model_name='coursemanage',
            name='teaching_faculty',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='console.employee_model'),
        ),
        migrations.AddField(
            model_name='course',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='course',
            name='sub_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='console.sub_category'),
        ),
        migrations.CreateModel(
            name='Complaints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_name', models.CharField(max_length=100, unique=True)),
                ('complaint_subject', models.CharField(max_length=100)),
                ('complaint_discription', models.TextField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='class_room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_room', models.IntegerField()),
                ('floor', models.IntegerField()),
                ('capacity', models.IntegerField()),
                ('address', models.TextField()),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_rooms', to='console.register_model')),
            ],
        ),
        migrations.CreateModel(
            name='CalenderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('date_time', models.DateTimeField()),
                ('category', models.CharField(max_length=100)),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('Active', 'Active'), ('Deactive', 'Deactive')], default='Active', max_length=100)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.branchmodel')),
                ('crn_number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calenders', to='console.register_model')),
            ],
        ),
        migrations.AddField(
            model_name='branchmodel',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branches', to='console.register_model'),
        ),
        migrations.AddField(
            model_name='batchtype',
            name='crn_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_type', to='console.register_model'),
        ),
    ]
